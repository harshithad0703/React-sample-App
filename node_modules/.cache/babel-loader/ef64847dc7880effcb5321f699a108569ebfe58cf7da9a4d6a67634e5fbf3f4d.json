{"ast":null,"code":"var _jsxFileName = \"/Users/harshitha.d/Documents/my-sample-app_2/src/components/Posts/Posts.js\";\nimport React from \"react\";\nimport Contentstack from 'contentstack';\nimport \"./Posts.css\";\nimport Post from \"../Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsCards = () => {\n  const post = {\n    type: \"GET\",\n    url: \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      api_key: \"blt19d69e3984ff963a\",\n      access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n    },\n    dataType: \"json\",\n    success: PostsCards,\n    error: function () {\n      alert(\"failed\");\n    }\n  };\n  /*#__PURE__*/_jsxDEV(\"script\", {\n    src: \"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 2\n  }, this);\n  const Stack = Contentstack.Stack({\n    \"api_key\": \"blt19d69e3984ff963a\",\n    \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\",\n    \"environment\": \"hd-prod\"\n  });\n  const Query = Stack.ContentType('hd_food_blog').Query();\n  Query.where(\"title\").includeSchema().includeCount().toJSON().find().then(function success(result) {\n    // result is array where -\n    console.log(result);\n    return result;\n    // result[0] => entry objects\n    // result[result.length-1] => entry objects count included only when .includeCount() is queried.\n    // result[1] => schema of the content type is included when .includeSchema() is queried.\n  }, function error(err) {\n    // err object\n  });\n\n  // const PostsCards = ()=>{\n  //   return (<div>\n  //       <Post/>\n  //   </div> \n  //   );\n  // }\n  // function PostsCards(data){\n  //   (\".title\").append(data.entries.food_image);\n  //   (\".description\").append(data.enties.description);\n  //   (\".place\").append(data.entries.address.title)\n  //   (\"href\").append(data.entries.address.href)\n\n  // };\n};\n_c = PostsCards;\nexport default PostsCards;\nvar _c;\n$RefreshReg$(_c, \"PostsCards\");","map":{"version":3,"names":["React","Contentstack","Post","jsxDEV","_jsxDEV","PostsCards","post","type","url","headers","api_key","access_token","dataType","success","error","alert","src","fileName","_jsxFileName","lineNumber","columnNumber","Stack","Query","ContentType","where","includeSchema","includeCount","toJSON","find","then","result","console","log","err","_c","$RefreshReg$"],"sources":["/Users/harshitha.d/Documents/my-sample-app_2/src/components/Posts/Posts.js"],"sourcesContent":["import React from \"react\";\nimport Contentstack from 'contentstack';\nimport \"./Posts.css\";\nimport Post from \"../Post/Post\";\nconst PostsCards = ()=>{\nconst post=({\n  type: \"GET\",\n  url:\n    \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    api_key: \"blt19d69e3984ff963a\",\n    access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n  },\n  dataType: \"json\",\n  success: PostsCards,\n  error: function() {\n    alert(\"failed\");\n  }\n});\n\n\n\n <script src=\"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"></script>\n\nconst Stack = Contentstack.Stack({ \"api_key\": \"blt19d69e3984ff963a\", \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\", \"environment\": \"hd-prod\" });\n\nconst Query = Stack.ContentType('hd_food_blog').Query();\n\nQuery\n   .where(\"title\")\n   .includeSchema()\n   .includeCount()\n   .toJSON()\n   .find()\n   .then(function success(result) {\n      // result is array where -\n      console.log(result)\n      return result\n      // result[0] => entry objects\n      // result[result.length-1] => entry objects count included only when .includeCount() is queried.\n      // result[1] => schema of the content type is included when .includeSchema() is queried.\n  }, function error(err) {\n     // err object\n     \n });\n\n// const PostsCards = ()=>{\n//   return (<div>\n//       <Post/>\n//   </div> \n//   );\n// }\n// function PostsCards(data){\n//   (\".title\").append(data.entries.food_image);\n//   (\".description\").append(data.enties.description);\n//   (\".place\").append(data.entries.address.title)\n//   (\"href\").append(data.entries.address.href)\n \n// };\n}\n\nexport default PostsCards;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,cAAc;AACvC,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChC,MAAMC,UAAU,GAAGA,CAAA,KAAI;EACvB,MAAMC,IAAI,GAAE;IACVC,IAAI,EAAE,KAAK;IACXC,GAAG,EACD,uFAAuF;IACzFC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,OAAO,EAAE,qBAAqB;MAC9BC,YAAY,EAAE;IAChB,CAAC;IACDC,QAAQ,EAAE,MAAM;IAChBC,OAAO,EAAER,UAAU;IACnBS,KAAK,EAAE,SAAAA,CAAA,EAAW;MAChBC,KAAK,CAAC,QAAQ,CAAC;IACjB;EACF,CAAE;EAID,aAAAX,OAAA;IAAQY,GAAG,EAAC;EAA+E;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAU;EAEtG,MAAMC,KAAK,GAAGpB,YAAY,CAACoB,KAAK,CAAC;IAAE,SAAS,EAAE,qBAAqB;IAAE,gBAAgB,EAAE,4BAA4B;IAAE,aAAa,EAAE;EAAU,CAAC,CAAC;EAEhJ,MAAMC,KAAK,GAAGD,KAAK,CAACE,WAAW,CAAC,cAAc,CAAC,CAACD,KAAK,EAAE;EAEvDA,KAAK,CACDE,KAAK,CAAC,OAAO,CAAC,CACdC,aAAa,EAAE,CACfC,YAAY,EAAE,CACdC,MAAM,EAAE,CACRC,IAAI,EAAE,CACNC,IAAI,CAAC,SAAShB,OAAOA,CAACiB,MAAM,EAAE;IAC5B;IACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,OAAOA,MAAM;IACb;IACA;IACA;EACJ,CAAC,EAAE,SAAShB,KAAKA,CAACmB,GAAG,EAAE;IACpB;EAAA,CAEH,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACA,CAAC;AAAAC,EAAA,GAxDK7B,UAAU;AA0DhB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}