{"ast":null,"code":"var _jsxFileName = \"/Users/harshitha.d/Documents/my-sample-app_2/src/components/Posts/Posts.js\";\n// import React from \"react\";\n// import Contentstack from 'contentstack';\n// import \"./Posts.css\";\n// import Post from \"../Post/Post\";\n// const PostsCards = ()=>{\n// const post=({\n//   type: \"GET\",\n//   url:\n//     \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     api_key: \"blt19d69e3984ff963a\",\n//     access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n//   },\n//   dataType: \"json\",\n//   success: PostsCards,\n//   error: function() {\n//     alert(\"failed\");\n//   }\n// });\n\n//  <script src=\"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"></script>\n\n// const Stack = Contentstack.Stack({ \"api_key\": \"blt19d69e3984ff963a\", \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\", \"environment\": \"hd-prod\" });\n\n// const Query = Stack.ContentType('hd_food_blog').Query();\n\n// Query\n//    .where(\"title\")\n//    .includeSchema()\n//    .includeCount()\n//    .toJSON()\n//    .find()\n//    .then(function success(result) {\n//       // result is array where -\n//       console.log(result)\n//       return result\n//       // result[0] => entry objects\n//       // result[result.length-1] => entry objects count included only when .includeCount() is queried.\n//       // result[1] => schema of the content type is included when .includeSchema() is queried.\n//   }, function error(err) {\n//      // err object\n\n//  });\n\n// const PostsCards = ()=>{\n//   return (<div>\n//       <Post/>\n//   </div> \n//   );\n// }\n// function PostsCards(data){\n//   (\".title\").append(data.entries.food_image);\n//   (\".description\").append(data.enties.description);\n//   (\".place\").append(data.entries.address.title)\n//   (\"href\").append(data.entries.address.href)\n\n// };\n// }\n\n// export default PostsCards;\n\nimport React from \"react\";\nimport \"./Posts.css\";\nimport Post from \"../Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst posts = {\n  type: \"GET\",\n  url: \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    api_key: \"blt19d69e3984ff963a\",\n    access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n  },\n  dataType: \"json\",\n  success: PostsCards,\n  error: function () {\n    alert(\"failed\");\n  }\n};\n/*#__PURE__*/_jsxDEV(\"script\", {\n  src: \"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 1\n}, this);\nconst Stack = Contentstack.Stack({\n  \"api_key\": \"blt19d69e3984ff963a\",\n  \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\",\n  \"environment\": \"hd-prod\"\n});\nconst Query = Stack.ContentType('hd_food_blog').Query();\nQuery.where(\"title\").includeSchema().includeCount().toJSON().find().then(function success(result) {\n  // result is array where -\n  console.log(result);\n  return result;\n  // result[0] => entry objects\n  // result[result.length-1] => entry objects count included only when .includeCount() is queried.\n  // result[1] => schema of the content type is included when .includeSchema() is queried.\n}, function error(err) {\n  // err object\n});\nconst PostsCards = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Post, {\n      Query: Query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 11\n  }, this);\n};\n_c = PostsCards;\nexport default PostsCards;\nvar _c;\n$RefreshReg$(_c, \"PostsCards\");","map":{"version":3,"names":["React","Post","jsxDEV","_jsxDEV","posts","type","url","headers","api_key","access_token","dataType","success","PostsCards","error","alert","src","fileName","_jsxFileName","lineNumber","columnNumber","Stack","Contentstack","Query","ContentType","where","includeSchema","includeCount","toJSON","find","then","result","console","log","err","children","_c","$RefreshReg$"],"sources":["/Users/harshitha.d/Documents/my-sample-app_2/src/components/Posts/Posts.js"],"sourcesContent":["// import React from \"react\";\n// import Contentstack from 'contentstack';\n// import \"./Posts.css\";\n// import Post from \"../Post/Post\";\n// const PostsCards = ()=>{\n// const post=({\n//   type: \"GET\",\n//   url:\n//     \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     api_key: \"blt19d69e3984ff963a\",\n//     access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n//   },\n//   dataType: \"json\",\n//   success: PostsCards,\n//   error: function() {\n//     alert(\"failed\");\n//   }\n// });\n\n\n\n//  <script src=\"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"></script>\n\n// const Stack = Contentstack.Stack({ \"api_key\": \"blt19d69e3984ff963a\", \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\", \"environment\": \"hd-prod\" });\n\n// const Query = Stack.ContentType('hd_food_blog').Query();\n\n// Query\n//    .where(\"title\")\n//    .includeSchema()\n//    .includeCount()\n//    .toJSON()\n//    .find()\n//    .then(function success(result) {\n//       // result is array where -\n//       console.log(result)\n//       return result\n//       // result[0] => entry objects\n//       // result[result.length-1] => entry objects count included only when .includeCount() is queried.\n//       // result[1] => schema of the content type is included when .includeSchema() is queried.\n//   }, function error(err) {\n//      // err object\n     \n//  });\n\n// const PostsCards = ()=>{\n//   return (<div>\n//       <Post/>\n//   </div> \n//   );\n// }\n// function PostsCards(data){\n//   (\".title\").append(data.entries.food_image);\n//   (\".description\").append(data.enties.description);\n//   (\".place\").append(data.entries.address.title)\n//   (\"href\").append(data.entries.address.href)\n \n// };\n// }\n\n// export default PostsCards;\n\nimport React from \"react\";\nimport \"./Posts.css\";\nimport Post from \"../Post/Post\";\nconst posts=({\n  type: \"GET\",\n  url:\n    \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    api_key: \"blt19d69e3984ff963a\",\n    access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n  },\n  dataType: \"json\",\n  success: PostsCards,\n  error: function() {\n    alert(\"failed\");\n  }\n});\n<script src=\"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"></script>\n\nconst Stack = Contentstack.Stack({ \"api_key\": \"blt19d69e3984ff963a\", \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\", \"environment\": \"hd-prod\" });\n\nconst Query = Stack.ContentType('hd_food_blog').Query();\n\nQuery\n   .where(\"title\")\n   .includeSchema()\n   .includeCount()\n   .toJSON()\n   .find()\n   .then(function success(result) {\n      // result is array where -\n      console.log(result)\n      return result\n      // result[0] => entry objects\n      // result[result.length-1] => entry objects count included only when .includeCount() is queried.\n      // result[1] => schema of the content type is included when .includeSchema() is queried.\n  }, function error(err) {\n     // err object\n     \n });\n\nconst PostsCards = ()=>{\n  return (<div>\n      <Post Query={Query}/>\n  </div> \n  );\n}\n\nexport default PostsCards;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChC,MAAMC,KAAK,GAAE;EACXC,IAAI,EAAE,KAAK;EACXC,GAAG,EACD,uFAAuF;EACzFC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,OAAO,EAAE,qBAAqB;IAC9BC,YAAY,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE,MAAM;EAChBC,OAAO,EAAEC,UAAU;EACnBC,KAAK,EAAE,SAAAA,CAAA,EAAW;IAChBC,KAAK,CAAC,QAAQ,CAAC;EACjB;AACF,CAAE;AACF,aAAAX,OAAA;EAAQY,GAAG,EAAC;AAA+E;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAU;AAErG,MAAMC,KAAK,GAAGC,YAAY,CAACD,KAAK,CAAC;EAAE,SAAS,EAAE,qBAAqB;EAAE,gBAAgB,EAAE,4BAA4B;EAAE,aAAa,EAAE;AAAU,CAAC,CAAC;AAEhJ,MAAME,KAAK,GAAGF,KAAK,CAACG,WAAW,CAAC,cAAc,CAAC,CAACD,KAAK,EAAE;AAEvDA,KAAK,CACDE,KAAK,CAAC,OAAO,CAAC,CACdC,aAAa,EAAE,CACfC,YAAY,EAAE,CACdC,MAAM,EAAE,CACRC,IAAI,EAAE,CACNC,IAAI,CAAC,SAASlB,OAAOA,CAACmB,MAAM,EAAE;EAC5B;EACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOA,MAAM;EACb;EACA;EACA;AACJ,CAAC,EAAE,SAASjB,KAAKA,CAACoB,GAAG,EAAE;EACpB;AAAA,CAEH,CAAC;AAEH,MAAMrB,UAAU,GAAGA,CAAA,KAAI;EACrB,oBAAQT,OAAA;IAAA+B,QAAA,eACJ/B,OAAA,CAACF,IAAI;MAACqB,KAAK,EAAEA;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnB;AAER,CAAC;AAAAgB,EAAA,GALKvB,UAAU;AAOhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}