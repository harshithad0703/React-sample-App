{"ast":null,"code":"var _jsxFileName = \"/Users/harshitha.d/Documents/my-sample-app_2/src/components/Posts/Posts.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport Contentstack from 'contentstack';\n// import \"./Posts.css\";\n// import Post from \"../Post/Post\";\n// const PostsCards = ()=>{\n// const post=({\n//   type: \"GET\",\n//   url:\n//     \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     api_key: \"blt19d69e3984ff963a\",\n//     access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n//   },\n//   dataType: \"json\",\n//   success: PostsCards,\n//   error: function() {\n//     alert(\"failed\");\n//   }\n// });\n\n// // const PostsCards = ()=>{\n// //   return (<div>\n\n// //   </div> \n// //   );\n// // }\n// function PostsCards(data){\n//   (\".title\").append(data.entries.food_image);\n//   (\".description\").append(data.enties.description);\n//   (\".place\").append(data.entries.address.title)\n//   (\"href\").append(data.entries.address.href)\n\n// };\n// }\n\n// export default PostsCards;\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(\"script\", {\n  src: \"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 1\n}, this);\nfunction PostsCards() {\n  _s();\n  const [contents, setContents] = useState([]);\n  const Stack = Contentstack.Stack({\n    \"api_key\": \"blt19d69e3984ff963a\",\n    \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\",\n    \"environment\": \"hd-prod\"\n  });\n  const Query = Stack.ContentType('hd_food_blog').Query();\n  const datas = () => {\n    Query.limit(20).toJSON().find()\n    //     .then(response => {\n    //       return response\n    //     })\n    //     .then(data => {\n    //       setContents(data)\n    //     })\n    // }\n    // useEffect(() => {\n    //   datas()\n    // }, [])\n    // const a=contents;\n    .then(result => {\n      this.setState({\n        loading: false,\n        result: result\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  console.log(contents[0]);\n  for (let i = 0; i < contents.length; i++) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: contents.length >> 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contents.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: c[i].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(PostsCards, \"dbCgnagYcXNc9X7Zue2XtDSxQ7A=\");\n_c = PostsCards;\nexport default PostsCards;\nvar _c;\n$RefreshReg$(_c, \"PostsCards\");","map":{"version":3,"names":["Contentstack","React","useEffect","useState","jsxDEV","_jsxDEV","src","fileName","_jsxFileName","lineNumber","columnNumber","PostsCards","_s","contents","setContents","Stack","Query","ContentType","datas","limit","toJSON","find","then","result","setState","loading","catch","error","console","log","i","length","children","map","c","title","_c","$RefreshReg$"],"sources":["/Users/harshitha.d/Documents/my-sample-app_2/src/components/Posts/Posts.jsx"],"sourcesContent":["// import React from \"react\";\nimport Contentstack from 'contentstack';\n// import \"./Posts.css\";\n// import Post from \"../Post/Post\";\n// const PostsCards = ()=>{\n// const post=({\n//   type: \"GET\",\n//   url:\n//     \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     api_key: \"blt19d69e3984ff963a\",\n//     access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n//   },\n//   dataType: \"json\",\n//   success: PostsCards,\n//   error: function() {\n//     alert(\"failed\");\n//   }\n// });\n\n// // const PostsCards = ()=>{\n// //   return (<div>\n\n// //   </div> \n// //   );\n// // }\n// function PostsCards(data){\n//   (\".title\").append(data.entries.food_image);\n//   (\".description\").append(data.enties.description);\n//   (\".place\").append(data.entries.address.title)\n//   (\"href\").append(data.entries.address.href)\n\n// };\n// }\n\n// export default PostsCards;\n\nimport React, { useEffect, useState } from \"react\"\nimport \"./Posts.css\";\n\n<script src=\"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"></script>\nfunction PostsCards() {\n  const [contents, setContents] = useState([])\n  const Stack = Contentstack.Stack({ \"api_key\": \"blt19d69e3984ff963a\", \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\", \"environment\": \"hd-prod\" });\n\n  const Query = Stack.ContentType('hd_food_blog').Query();\n\n  const datas = () => {\n\n    Query\n      .limit(20)\n      .toJSON()\n      .find()\n  //     .then(response => {\n  //       return response\n  //     })\n  //     .then(data => {\n  //       setContents(data)\n  //     })\n  // }\n  // useEffect(() => {\n  //   datas()\n  // }, [])\n  // const a=contents;\n  .then((result) => {\n    this.setState({loading : false, result:result})\n  })\n  .catch((error) => {\n    console.log(error)\n  })\n}\n\nconsole.log(contents[0])\n  for (let i = 0; i < contents.length; i++) {\n    return (\n    \n      <div>\n        {contents.length >> 0&&(\n          <ul>\n          {contents.map(c => (\n            <li>{c[i].title}</li>\n          ))}\n        </ul>\n        )}\n        {/* <h1>blog {contents.map(content => (\n                <li>{content[i].title}</li>\n              ))}</h1>\n        <h2></h2> */}\n        \n    \n      </div>\n      );\n  }\n  \n}\n\nexport default PostsCards;"],"mappings":";;AAAA;AACA,OAAOA,YAAY,MAAM,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,aAAAA,OAAA;EAAQC,GAAG,EAAC;AAA+E;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAU;AACrG,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,KAAK,GAAGf,YAAY,CAACe,KAAK,CAAC;IAAE,SAAS,EAAE,qBAAqB;IAAE,gBAAgB,EAAE,4BAA4B;IAAE,aAAa,EAAE;EAAU,CAAC,CAAC;EAEhJ,MAAMC,KAAK,GAAGD,KAAK,CAACE,WAAW,CAAC,cAAc,CAAC,CAACD,KAAK,EAAE;EAEvD,MAAME,KAAK,GAAGA,CAAA,KAAM;IAElBF,KAAK,CACFG,KAAK,CAAC,EAAE,CAAC,CACTC,MAAM,EAAE,CACRC,IAAI;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA,CACCC,IAAI,CAAEC,MAAM,IAAK;MAChB,IAAI,CAACC,QAAQ,CAAC;QAACC,OAAO,EAAG,KAAK;QAAEF,MAAM,EAACA;MAAM,CAAC,CAAC;IACjD,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAChB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtB,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,QAAQ,CAACkB,MAAM,EAAED,CAAC,EAAE,EAAE;IACxC,oBAEEzB,OAAA;MAAA2B,QAAA,EACGnB,QAAQ,CAACkB,MAAM,IAAI,CAAC,iBACnB1B,OAAA;QAAA2B,QAAA,EACCnB,QAAQ,CAACoB,GAAG,CAACC,CAAC,iBACb7B,OAAA;UAAA2B,QAAA,EAAKE,CAAC,CAACJ,CAAC,CAAC,CAACK;QAAK;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAOG;EAEV;AAEF;AAACE,EAAA,CArDQD,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAuDnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}