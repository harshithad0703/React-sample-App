{"ast":null,"code":"var _jsxFileName = \"/Users/harshitha.d/Documents/my-sample-app_2/src/components/Posts/Posts.js\";\nimport React from \"react\";\nimport Contentstack from 'contentstack';\nimport \"./Posts.css\";\nimport Post from \"../../../../my-sample-app/src/components/Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst post = {\n  type: \"GET\",\n  url: \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    api_key: \"blt19d69e3984ff963a\",\n    access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n  },\n  dataType: \"json\",\n  success: PostsCards,\n  error: function () {\n    alert(\"failed\");\n  }\n};\n/*#__PURE__*/_jsxDEV(\"script\", {\n  src: \"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 2\n}, this);\nconst Stack = Contentstack.Stack({\n  \"api_key\": \"blt19d69e3984ff963a\",\n  \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\",\n  \"environment\": \"hd-prod\"\n});\nconst Query = Stack.ContentType('hd_food_blog').Query();\nQuery.where(\"title\").includeSchema().includeCount().toJSON().find().then(function success(result) {\n  // result is array where -\n  console.log(result);\n  return result;\n  // result[0] => entry objects\n  // result[result.length-1] => entry objects count included only when .includeCount() is queried.\n  // result[1] => schema of the content type is included when .includeSchema() is queried.\n}, function error(err) {\n  // err object\n});\nconst PostsCards = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }, this);\n};\n// function PostsCards(data){\n//   (\".title\").append(data.entries.food_image);\n//   (\".description\").append(data.enties.description);\n//   (\".place\").append(data.entries.address.title)\n//   (\"href\").append(data.entries.address.href)\n\n// };\n_c = PostsCards;\nexport default PostsCards;\nvar _c;\n$RefreshReg$(_c, \"PostsCards\");","map":{"version":3,"names":["React","Contentstack","Post","jsxDEV","_jsxDEV","post","type","url","headers","api_key","access_token","dataType","success","PostsCards","error","alert","src","fileName","_jsxFileName","lineNumber","columnNumber","Stack","Query","ContentType","where","includeSchema","includeCount","toJSON","find","then","result","console","log","err","children","_c","$RefreshReg$"],"sources":["/Users/harshitha.d/Documents/my-sample-app_2/src/components/Posts/Posts.js"],"sourcesContent":["import React from \"react\";\nimport Contentstack from 'contentstack';\nimport \"./Posts.css\";\nimport Post from \"../../../../my-sample-app/src/components/Post/Post\";\n\nconst post=({\n  type: \"GET\",\n  url:\n    \"https://cdn.contentstack.io/v3/content_types/hd_food_blog/entries?environment=hd-prod\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    api_key: \"blt19d69e3984ff963a\",\n    access_token: \"cs42701f5dfb9cd8f0636dff0a\"\n  },\n  dataType: \"json\",\n  success: PostsCards,\n  error: function() {\n    alert(\"failed\");\n  }\n});\n\n\n\n <script src=\"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"></script>\n\nconst Stack = Contentstack.Stack({ \"api_key\": \"blt19d69e3984ff963a\", \"delivery_token\": \"cs42701f5dfb9cd8f0636dff0a\", \"environment\": \"hd-prod\" });\n\nconst Query = Stack.ContentType('hd_food_blog').Query();\n\nQuery\n   .where(\"title\")\n   .includeSchema()\n   .includeCount()\n   .toJSON()\n   .find()\n   .then(function success(result) {\n      // result is array where -\n      console.log(result)\n      return result\n      // result[0] => entry objects\n      // result[result.length-1] => entry objects count included only when .includeCount() is queried.\n      // result[1] => schema of the content type is included when .includeSchema() is queried.\n  }, function error(err) {\n     // err object\n     \n });\n\nconst PostsCards = ()=>{\n  return (<div>\n      <Post/>\n  </div> \n  );\n}\n// function PostsCards(data){\n//   (\".title\").append(data.entries.food_image);\n//   (\".description\").append(data.enties.description);\n//   (\".place\").append(data.entries.address.title)\n//   (\"href\").append(data.entries.address.href)\n \n// };\n\n\nexport default PostsCards;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,cAAc;AACvC,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,oDAAoD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,IAAI,GAAE;EACVC,IAAI,EAAE,KAAK;EACXC,GAAG,EACD,uFAAuF;EACzFC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,OAAO,EAAE,qBAAqB;IAC9BC,YAAY,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE,MAAM;EAChBC,OAAO,EAAEC,UAAU;EACnBC,KAAK,EAAE,SAAAA,CAAA,EAAW;IAChBC,KAAK,CAAC,QAAQ,CAAC;EACjB;AACF,CAAE;AAID,aAAAX,OAAA;EAAQY,GAAG,EAAC;AAA+E;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAU;AAEtG,MAAMC,KAAK,GAAGpB,YAAY,CAACoB,KAAK,CAAC;EAAE,SAAS,EAAE,qBAAqB;EAAE,gBAAgB,EAAE,4BAA4B;EAAE,aAAa,EAAE;AAAU,CAAC,CAAC;AAEhJ,MAAMC,KAAK,GAAGD,KAAK,CAACE,WAAW,CAAC,cAAc,CAAC,CAACD,KAAK,EAAE;AAEvDA,KAAK,CACDE,KAAK,CAAC,OAAO,CAAC,CACdC,aAAa,EAAE,CACfC,YAAY,EAAE,CACdC,MAAM,EAAE,CACRC,IAAI,EAAE,CACNC,IAAI,CAAC,SAASjB,OAAOA,CAACkB,MAAM,EAAE;EAC5B;EACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOA,MAAM;EACb;EACA;EACA;AACJ,CAAC,EAAE,SAAShB,KAAKA,CAACmB,GAAG,EAAE;EACpB;AAAA,CAEH,CAAC;AAEH,MAAMpB,UAAU,GAAGA,CAAA,KAAI;EACrB,oBAAQT,OAAA;IAAA8B,QAAA,eACJ9B,OAAA,CAACF,IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAER,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AAAAe,EAAA,GAZMtB,UAAU;AAehB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}