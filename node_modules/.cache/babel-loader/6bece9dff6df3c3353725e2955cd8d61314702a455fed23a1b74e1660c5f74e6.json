{"ast":null,"code":"var _jsxFileName = \"/Users/harshitha.d/Documents/my-sample-app_2/src/index.js\";\nimport React from 'react';\nimport Contentstack from 'contentstack';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(\"script\", {\n  src: \"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 1\n}, this);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this));\nconst Stack = Contentstack.Stack({\n  \"api_key\": \"blt19d69e3984ff963a\",\n  \"cs42701f5dfb9cd8f0636dff0a\": \"delivery_token\",\n  \"environment\": \"hd-prod\"\n});\n// const entry = Stack.ContentType('hd_food_blog').Entry(\"blt720f068ef00d6e6d\");\n// const result = await entry.fetch()\n// console.log(result)\nconst Query = Stack.ContentType('hd_food_blog').Query();\nQuery.where(\"title\", \"welcome\").includeContentType().includeCount().toJSON().find().then(function success(result) {\n  // result is array where -\n  // result[0] =&gt; entry objects\n  // result[result.length-1] =&gt; entry objects count included only when .includeCount() is queried.\n  // result[1] =&gt; schema of the content type is included when .includeContentType() is queried.\n}, function error(err) {\n  // err object\n});\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","Contentstack","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","src","fileName","_jsxFileName","lineNumber","columnNumber","root","createRoot","document","getElementById","render","StrictMode","children","Stack","Query","ContentType","where","includeContentType","includeCount","toJSON","find","then","success","result","error","err"],"sources":["/Users/harshitha.d/Documents/my-sample-app_2/src/index.js"],"sourcesContent":["import React from 'react';\nimport Contentstack from 'contentstack';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n<script src=\"https://cdn.jsdelivr.net/npm/contentstack@latest/dist/web/contentstack.min.js\"></script>\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nconst Stack = Contentstack.Stack({\"api_key\":\"blt19d69e3984ff963a\",\"cs42701f5dfb9cd8f0636dff0a\":\"delivery_token\",\"environment\":\"hd-prod\"});\n// const entry = Stack.ContentType('hd_food_blog').Entry(\"blt720f068ef00d6e6d\");\n// const result = await entry.fetch()\n// console.log(result)\nconst Query = Stack.ContentType('hd_food_blog').Query();\n\nQuery\n.where(\"title\", \"welcome\")\n.includeContentType()\n.includeCount()\n.toJSON()\n.find()\n.then(function success(result) {\n    // result is array where -\n    // result[0] =&gt; entry objects\n    // result[result.length-1] =&gt; entry objects count included only when .includeCount() is queried.\n    // result[1] =&gt; schema of the content type is included when .includeContentType() is queried.\n}, function error(err) {\n    // err object\n})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,cAAc;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,aAAAA,OAAA;EAAQC,GAAG,EAAC;AAA+E;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAU;AACrG,MAAMC,IAAI,GAAGV,QAAQ,CAACW,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTV,OAAA,CAACN,KAAK,CAACiB,UAAU;EAAAC,QAAA,eACfZ,OAAA,CAACH,GAAG;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACU,CACpB;AACD,MAAMQ,KAAK,GAAGlB,YAAY,CAACkB,KAAK,CAAC;EAAC,SAAS,EAAC,qBAAqB;EAAC,4BAA4B,EAAC,gBAAgB;EAAC,aAAa,EAAC;AAAS,CAAC,CAAC;AACzI;AACA;AACA;AACA,MAAMC,KAAK,GAAGD,KAAK,CAACE,WAAW,CAAC,cAAc,CAAC,CAACD,KAAK,EAAE;AAEvDA,KAAK,CACJE,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CACzBC,kBAAkB,EAAE,CACpBC,YAAY,EAAE,CACdC,MAAM,EAAE,CACRC,IAAI,EAAE,CACNC,IAAI,CAAC,SAASC,OAAOA,CAACC,MAAM,EAAE;EAC3B;EACA;EACA;EACA;AAAA,CACH,EAAE,SAASC,KAAKA,CAACC,GAAG,EAAE;EACnB;AAAA,CACH,CAAC;AACF;AACA;AACA;AACA3B,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}